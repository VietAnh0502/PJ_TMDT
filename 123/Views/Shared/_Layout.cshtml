<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HanDK</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/_123.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="/css/style.css">
    <!-- Thêm liên kết tới Font Awesome CDN -->
	<link rel="icon" type="image/png" href="~/images/HanDK-removebg.png" />
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:ital,wght@0,200;0,300;0,400;1,300&display=swap" />
</head>
<body>
    <header>
  		<div class="header">
			<partial name="_LoginPopup" />
			<div class="header-child">
				<!-- Các icon bên trái -->
				<div class="left-icons">
					<span class="material-icons search-location-icon">location_on</span> <!-- Tìm kiếm vị trí -->
					<span class="material-icons icon-facebook-color">facebook</span> <!-- Facebook -->
					<span class="material-icons phone-volume-icon">phone</span> <!-- Điện thoại -->
					<div class="div">0976534850</div> <!-- Số điện thoại -->
				</div>

				<!-- Logo thương hiệu -->
				<img class="handk-icon" alt="HanDK" src="/images/HanDK-removebg.png" onclick="window.location='@Url.Action("Index", "Home")';" style="cursor: pointer;">

				<!-- Các icon bên phải -->
				<div class="right-icons">
					<span class="material-icons shopping-cart-icon">shopping_cart</span> <!-- Giỏ hàng -->
					<span class="material-icons user-icon">person</span> <!-- Người dùng -->
				</div>
			</div>
			<nav>
				<div class="wrapper">
					<ul class="nav-links">
						<li><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
						<li>
    						<a href="javascript:void(0);">Danh mục <span class="arrowHover">&#8593;</span></a>
							<ul class="dropdown">
								<li>
									<a href="/category/nhanCauHon">Nhẫn cầu hôn</a>
									<ul class="dropdown1">
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Kiểu dáng</a>
											<ul class="type">
												<li><a href="#">Solitaire</a></li>
												<li><a href="#">Cathedral</a></li>
												<li><a href="#">Halo</a></li>
												<li><a href="#">Bridge Accent</a></li>
												<li><a href="#">Twist</a></li>
												<li><a href="#">Royal</a></li>
												<li><a href="#">ThreeStone</a></li>
												<li><a href="#">Trellis</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Kiểu viên chủ</a>
											<ul class="type">
												<li><a href="#">Round</a></li>
												<li><a href="#">Heart</a></li>
												<li><a href="#">Pear</a></li>
												<li><a href="#">Princess</a></li>
												<li><a href="#">Emerald</a></li>
												<li><a href="#">Oval</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Bộ sưu tập</a>
											<ul class="type">
												<li><a href="#">My Princess</a></li>
												<li><a href="#">Tender Love</a></li>
												<li><a href="#">Holding You</a></li>
												<li><a href="#">Eternal Promise</a></li>
												<li><a href="#">Bridal Gown</a></li>
												<li><a href="#">Petite Bridal</a></li>
												<li><a href="#">Blooming</a></li>
												<li><a href="#">Spark Of Heaven</a></li>
											</ul>
										</li>
										<img class="header-drop" alt="" src="images\danhMuc1.png">								
									</ul>
								</li>
								<li>
									<a href="/category/nhanCuoi">Nhẫn cưới</a>
									<ul class="dropdown1">
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Loại nhẫn</i></a>
											<ul class="type">
												<li><a href="#">Nhẫn cưới cặp</a></li>
												<li><a href="#">Nhẫn cưới nam</a></li>
												<li><a href="#">Nhẫn cưới nữ</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Phong cách</a>
											<ul class="type">
												<li><a href="#">Nhẫn cưới Truyền Thống</a></li>
												<li><a href="#">Nhẫn cưới Hiện Đại</a></li>
												<li><a href="#">Nhẫn cưới Kim Cương</a></li>
												<li><a href="#">Nhẫn cưới Vương Miện</a></li>
												<li><a href="#">Nhẫn cưới Eternity</a></li>
												<li><a href="#">Nhẫn cưới Vintage</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Chất liệu</a>
											<ul class="type">
												<li><a href="#">Vàng trắng</a></li>
												<li><a href="#">Vàng vàng</a></li>
												<li><a href="#">Vàng hồng</a></li>
												<li><a href="#">14K</a></li>
												<li><a href="#">18K</a></li>
												<li><a href="#">Platinum</a></li>
											</ul>
										</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Bộ sưu tập</a>
											<ul class="type">
												<li><a href="#">Our Story</a></li>
												<li><a href="#">Sweet & Sour</a></li>
												<li><a href="#">Flower Of Joy</a></li>
												<li><a href="#">Shape Of Love</a></li>
												<li><a href="#">Yêu thương vàng son</a></li>
											</ul>
										</li>
										<img class="header-drop" alt="" src="/images/danhMuc2.png">									
									</ul>
									</li>
								<li>
									<a href="/category/trangSuc">Trang sức</a>
									<ul class="dropdown1">
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Loại trang sức</i></a>
											<ul class="type">
												<li><a href="#">Nhẫn kim cương</a></li>
												<li><a href="#">Nhẫn thời trang</a></li>
												<li><a href="#">Nhẫn nam</a></li>
												<li><a href="#">Bông tai</a></li>
												<li><a href="#">Dây chuyền</a></li>
												<li><a href="#">Vòng tay</a></li>
												<li><a href="#">Vàng thần tài</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Chất liệu</a>
											<ul class="type">
												<li><a href="#">Vàng 14K</a></li>
												<li><a href="#">Vàng 18K</a></li>
												<li><a href="#">Bạch kim</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Bộ sưu tập</a>
											<ul class="type">
												<li><a href="#">The Hearts</a></li>
												<li><a href="#">Brilliant Layering</a></li>
											</ul>
										</li>
										<img class="header-drop" alt="" src="/images/danhMuc3.png">								
									</ul>
									</li>
								<li>
									<a href="/category/kimCuong">Kim cương</a>
									<ul class="dropdown1">
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Giá tiền</i></a>
											<ul class="type">
												<li><a href="#">Dưới 30 triệu</a></li>
												<li><a href="#">Từ 30 triệu đến 100 triệu</a></li>
												<li><a href="#">Từ 100 triệu đến 200 triệu</a></li>
												<li><a href="#">Từ 200 triệu đến 1 tỷ</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Dáng</a>
											<ul class="type">
												<li><a href="#">Round</a></li>
												<li><a href="#">Princess</a></li>
												<li><a href="#">Oval</a></li>
												<li><a href="#">Pear</a></li>
												<li><a href="#">Emerald</a></li>
												<li><a href="#">Heart</a></li>
												<li><a href="#">Radiant</a></li>
												<li><a href="#">Marquise</a></li>
											</ul>
											</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Bảng giá kim cương GIA</a>
											<ul class="type">
												<li><a href="#">Giá kim cương 3 ly 6</a></li>
												<li><a href="#">Giá kim cương 4 ly 5</a></li>
												<li><a href="#">Giá kim cương 5 ly</a></li>
												<li><a href="#">Giá kim cương 5 ly 4</a></li>
											</ul>
										</li>
										<img class="header-drop" alt="" src="/images/danhMuc4.png">							
									</ul>
									</li>
								<li>
									<a href="/category/mens">Men's</a>
									<ul class="dropdown1">
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Kiểu dáng</a>
											<ul class="type">
												<li><a href="#">Phong thuỷ</a></li>
												<li><a href="#">Signet</a></li>
												<li><a href="#">Fancy</a></li>
												<li><a href="#">Eternity</a></li>
											</ul>
										</li>
										<li>
											<a href="#" style="text-decoration: none; color: inherit; cursor: default; font-weight: lighter;">Bộ sưu tập</a>
											<ul class="type">
												<li><a href="#">True North</a></li>
											</ul>
										</li>
										<img class="header-drop" alt="" src="/images/danhMuc5.png">								
									</ul>
								</li>
							</ul>
							</li>
						<li>
							<a href="javascript:void(0);">Thông tin <span class="arrowHover">&#8593;</span></a>
							<ul class="dropdown">
								<li><a href="/thongTin/chinhSachThuHoiVaDoiTra">Thu hồi và đổi trả</a></li>
								<li><a href="/thongTin/huongDanDoSize">Hướng dẫn đo size</a></li>
								<li><a href="/thongTin/chinhSachThanhToan">Thanh toán</a></li>
								<li><a href="/thongTin/chinhSachBaoMatThongTin">Bảo mật thông tin</a></li>
								<li><a href="/thongTin/giaVang">Giá Vàng</a></li>
							</ul>
							</li>
						<li><a href="/khuyenMai" style="color: red; text-decoration: none;" onmouseover="this.style.color='blue'" onmouseout="this.style.color='red'">Khuyến mãi</a></li>
						<li><a href="/cauChuyenHanDK">HanDK</a></li>
					</ul>
					<div class="search-group">
							<input type="text" class="search-input" placeholder="Tìm kiếm...">
							<span class="material-icons search-icon">search</span>
						</div>	
				</div>
			</nav>
			<div class="music-player">
    <div class="song-bar">
        <div class="song-infos">
            
            <div class="song-description">
                <p class="titleAudio" id="song-title"> </p>
            </div>
        </div>
    </div>
    <div class="progress-controller">
        <div class="control-buttons">
            <i class="fas fa-random" id="shuffle-btn"></i>
            <i class="fas fa-step-backward" id="prev-btn"></i>
            <i class="play-pause fas fa-play" id="play-pause-btn"></i>
            <i class="fas fa-step-forward" id="next-btn"></i>
            <i class="fas fa-undo-alt" id="repeat-btn"></i>
        </div>
        <img class="handk-icon1" alt="HanDK" src="/images/HanDK-removebg.png" onclick="window.location='@Url.Action("Index", "Home")';" style="cursor: pointer;">
        <div class="progress-container">
    <span id="current-time">0:00</span>
    <div class="progress-bar">
        <input type="range" id="progress-bar" value="0" step="1" />
    </div>
    <span id="duration">0:00</span>
</div>

    </div>
    <div class="other-features">
        <!-- Nút để hiển thị danh sách bài hát -->
<!-- Biểu tượng để hiển thị danh sách bài hát -->
    <div id="show-song-list-btn" class="icon-btn">
        <i class="fas fa-list-ul"></i> 
    </div>

<!-- Container chứa danh sách bài hát -->
<div id="song-list-container" style="display: none;">
    <ul id="song-list"></ul>
</div>
        <div class="volume-bar">
    <i class="fas fa-volume-down"></i>
    <div class="progress-bar">
        <input type="range" id="volume-control" value="100" min="0" max="100" step="1" />
    </div>
</div>

    </div>

    <!-- Audio element to play music -->
    <audio id="audio-player" preload="auto">
    </audio>
</div>
<script>
	document.addEventListener("DOMContentLoaded", function () {
    const audioPlayer = document.getElementById('audio-player');
    const showSongListBtn = document.getElementById('show-song-list-btn');
    const songListContainer = document.getElementById('song-list-container');
    const songListUl = document.getElementById('song-list');
    const songTitle = document.getElementById('song-title'); // Phần tử hiển thị tên bài hát
    const playPauseBtn = document.getElementById('play-pause-btn'); // Nút play/pause

    let songList = []; // Danh sách bài hát, sẽ được tải từ API hoặc mảng tĩnh
    let currentSongIndex = sessionStorage.getItem('currentSongIndex') || 0; // Lấy chỉ mục bài hát đã chọn từ sessionStorage

    // Giả sử bạn đã lấy danh sách bài hát từ API
    fetch('/api/music') // Đường dẫn lấy danh sách bài hát
        .then(response => response.json())
        .then(data => {
            songList = data;
            displaySongList(); // Hiển thị danh sách bài hát
            loadSong(songList[currentSongIndex]); // Tải bài hát hiện tại từ sessionStorage
        })
        .catch(error => console.log('Error loading music list:', error));

    // Hiển thị danh sách bài hát
    function displaySongList() {
        songListUl.innerHTML = ''; // Xóa danh sách cũ
        songList.forEach((song, index) => {
            const li = document.createElement('li');
            li.textContent = song.replace(/\.mp3$/, ''); // Hiển thị tên bài hát

            // Đánh dấu bài hát đang phát
            if (index === currentSongIndex) {
                li.style.fontWeight = 'bold'; // Thêm kiểu chữ đậm cho bài hát đang phát
            }

            li.addEventListener('click', () => {
                currentSongIndex = index; // Cập nhật chỉ mục bài hát đã chọn
                sessionStorage.setItem('currentSongIndex', currentSongIndex); // Lưu lại chỉ mục bài hát
                loadSong(song); // Khi chọn bài, phát bài đó
                audioPlayer.play(); // Phát bài hát ngay lập tức
                displaySongList(); // Cập nhật danh sách để làm nổi bật bài hát đang phát
                updatePlayPauseButton(true); // Đặt nút play/pause thành pause
            });
            songListUl.appendChild(li);
        });
    }

    // Tải và phát bài hát
    function loadSong(song) {
        const songUrl = `/audio/${song}`;
        audioPlayer.src = songUrl;
        audioPlayer.load(); // Nạp lại bài nhạc khi thay đổi

        // Cập nhật tên bài hát hiển thị trong songTitle
        const songTitleText = song.replace(/\.mp3$/, ''); // Xử lý tên bài hát
        if (songTitle) {
            songTitle.textContent = songTitleText; // Cập nhật nội dung tên bài hát
        }
    }

    // Cập nhật trạng thái nút play/pause
    function updatePlayPauseButton(isPlaying) {
        if (isPlaying) {
            playPauseBtn.classList.remove('fa-play'); // Xóa biểu tượng play
            playPauseBtn.classList.add('fa-pause'); // Thêm biểu tượng pause
        } else {
            playPauseBtn.classList.remove('fa-pause'); // Xóa biểu tượng pause
            playPauseBtn.classList.add('fa-play'); // Thêm biểu tượng play
        }
    }

    // Khi nhấn nút play/pause
    playPauseBtn.addEventListener('click', () => {
        if (audioPlayer.paused) {
            audioPlayer.play();
            updatePlayPauseButton(true); // Chuyển sang trạng thái pause
        } else {
            audioPlayer.pause();
            updatePlayPauseButton(false); // Chuyển sang trạng thái play
        }
    });

    // Thêm animation hiển thị/ẩn danh sách bài hát
    function toggleSongListContainer() {
        if (songListContainer.classList.contains('show')) {
            songListContainer.classList.remove('show'); // Ẩn danh sách
            setTimeout(() => {
                songListContainer.style.display = 'none';
            }, 300); // Khớp với thời gian CSS transition
        } else {
            songListContainer.style.display = 'block';
            setTimeout(() => {
                songListContainer.classList.add('show'); // Hiển thị danh sách
            }, 10);
        }
    }

    // Khi nhấn nút, hiển thị/ẩn danh sách bài hát
    showSongListBtn.addEventListener('click', (e) => {
        e.stopPropagation(); // Ngừng sự kiện click để không bị kích hoạt cho document
        toggleSongListContainer();
    });

    // Khi nhấn ra ngoài songListContainer, ẩn danh sách bài hát
    document.addEventListener('click', (e) => {
        if (!songListContainer.contains(e.target) && e.target !== showSongListBtn) {
            if (songListContainer.classList.contains('show')) {
                toggleSongListContainer();
            }
        }
    });

    // Ngừng sự kiện khi nhấn vào #song-list-container để không đóng khi click bên trong
    songListContainer.addEventListener('click', (e) => {
        e.stopPropagation();
    });
});


</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
    const audioPlayer = document.getElementById('audio-player');
    const playPauseBtn = document.getElementById('play-pause-btn');
    const progressBar = document.getElementById('progress-bar');
    const currentTimeDisplay = document.getElementById('current-time');
    const durationDisplay = document.getElementById('duration');
    const volumeControl = document.getElementById('volume-control');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const repeatBtn = document.getElementById('repeat-btn');
    const shuffleBtn = document.getElementById('shuffle-btn');
    const songTitle = document.getElementById('song-title');

    let isPlaying = false;
    let isRepeat = false;
    let isShuffle = false;
    let songList = [];
    let currentSongIndex = 0;

	// Khôi phục trạng thái Shuffle và Repeat từ sessionStorage
    const savedIsShuffle = sessionStorage.getItem('isShuffle');
    if (savedIsShuffle !== null) {
        isShuffle = savedIsShuffle === 'true';
        shuffleBtn.classList.toggle('active', isShuffle);
        shuffleBtn.classList.toggle('inactive', !isShuffle);
    }

    const savedIsRepeat = sessionStorage.getItem('isRepeat');
    if (savedIsRepeat !== null) {
        isRepeat = savedIsRepeat === 'true';
        audioPlayer.loop = isRepeat;
        repeatBtn.classList.toggle('active', isRepeat);
        repeatBtn.classList.toggle('inactive', !isRepeat);
    }
    // Lấy danh sách các bài nhạc từ API
    fetch('/api/music')
        .then(response => response.json())
        .then(data => {
            songList = data;
            if (songList.length > 0) {
                const savedSongIndex = sessionStorage.getItem('currentSongIndex');
                if (savedSongIndex) {
                    currentSongIndex = parseInt(savedSongIndex);
                }

                loadSong(songList[currentSongIndex]);

                // Kiểm tra và phục hồi thời gian phát nhạc đã lưu
                const savedTime = sessionStorage.getItem('audioPlayerCurrentTime');
                if (savedTime) {
                    audioPlayer.currentTime = savedTime;
                }

                // Kiểm tra và phục hồi âm lượng
                const savedVolume = sessionStorage.getItem('audioPlayerVolume');
                if (savedVolume) {
                    audioPlayer.volume = savedVolume;
                    volumeControl.value = savedVolume * 100;
                }

                // Kiểm tra trạng thái phát nhạc (tạm dừng hay đang phát)
                const savedIsPlaying = sessionStorage.getItem('isPlaying');
                if (savedIsPlaying === 'true') {
                    audioPlayer.play().then(() => {
                        isPlaying = true;
                        playPauseBtn.classList.remove('fa-play');
                        playPauseBtn.classList.add('fa-pause');
                    }).catch(err => {
                        console.log('Error starting playback:', err);
                    });
                } else {
                    isPlaying = false;
                    playPauseBtn.classList.remove('fa-pause');
                    playPauseBtn.classList.add('fa-play');
                }
            }
        })
        .catch(error => console.log('Error loading music list:', error));

    // Cập nhật thông tin bài nhạc
    function loadSong(song) {
        const songUrl = `/audio/${song}`;
        audioPlayer.src = songUrl;
        audioPlayer.load(); // Nạp lại bài nhạc khi thay đổi
        songTitle.textContent = song.replace(/\.mp3$/, '');
    }
    
    // Cập nhật thời gian và thanh tiến độ
    audioPlayer.addEventListener('timeupdate', () => {
        if (audioPlayer.duration && audioPlayer.currentTime) {
            const currentTime = Math.floor(audioPlayer.currentTime);
            const duration = Math.floor(audioPlayer.duration);

            // Cập nhật thanh tiến độ
            progressBar.value = currentTime;

            // Cập nhật thời gian hiện tại
            const currentMinutes = Math.floor(currentTime / 60);
            const currentSeconds = currentTime % 60;
            currentTimeDisplay.textContent = `${currentMinutes}:${currentSeconds < 10 ? '0' + currentSeconds : currentSeconds}`;

            // Cập nhật thời gian tổng của bài hát
            const durationMinutes = Math.floor(duration / 60);
            const durationSeconds = duration % 60;
            durationDisplay.textContent = `${durationMinutes}:${durationSeconds < 10 ? '0' + durationSeconds : durationSeconds}`;
        }
    });

    // Cập nhật giá trị max cho thanh tiến độ khi bài hát được nạp
    audioPlayer.addEventListener('loadedmetadata', () => {
        const duration = Math.floor(audioPlayer.duration);
        progressBar.max = duration; // Đặt giá trị max của thanh tiến độ theo thời gian bài hát
    });

    // Khi người dùng kéo thanh tiến độ, cập nhật vị trí phát nhạc
    progressBar.addEventListener('input', () => {
        audioPlayer.currentTime = progressBar.value;
    });
// Khi bài hát kết thúc, chuyển sang bài tiếp theo
    audioPlayer.addEventListener('ended', () => {
        // Tự động chuyển đến bài tiếp theo
        currentSongIndex = (currentSongIndex + 1) % songList.length;
        loadSong(songList[currentSongIndex]);
        audioPlayer.play();
        isPlaying = true;
        playPauseBtn.classList.remove('fa-play');
        playPauseBtn.classList.add('fa-pause');
		sessionStorage.setItem('currentSongIndex', currentSongIndex); // Lưu lại bài hát hiện tại
        sessionStorage.setItem('isPlaying', 'true'); // Lưu trạng thái đang phát
    });
    // Play/Pause
    playPauseBtn.addEventListener('click', () => {
        if (isPlaying) {
            audioPlayer.pause();
            playPauseBtn.classList.remove('fa-pause');
            playPauseBtn.classList.add('fa-play');
            sessionStorage.setItem('isPlaying', 'false'); // Lưu trạng thái tạm dừng
        } else {
            audioPlayer.play();
            playPauseBtn.classList.remove('fa-play');
            playPauseBtn.classList.add('fa-pause');
            sessionStorage.setItem('isPlaying', 'true'); // Lưu trạng thái đang phát
        }
        isPlaying = !isPlaying;
    });

    // Next Button
    nextBtn.addEventListener('click', () => {
        currentSongIndex = (currentSongIndex + 1) % songList.length;
        loadSong(songList[currentSongIndex]);
        audioPlayer.play();
        isPlaying = true;
        playPauseBtn.classList.remove('fa-play');
        playPauseBtn.classList.add('fa-pause');
        sessionStorage.setItem('currentSongIndex', currentSongIndex); // Lưu lại bài hát hiện tại
        sessionStorage.setItem('isPlaying', 'true'); // Lưu trạng thái đang phát
    });

    // Previous Button
    prevBtn.addEventListener('click', () => {
        currentSongIndex = (currentSongIndex - 1 + songList.length) % songList.length;
        loadSong(songList[currentSongIndex]);
        audioPlayer.play();
        isPlaying = true;
        playPauseBtn.classList.remove('fa-play');
        playPauseBtn.classList.add('fa-pause');
        sessionStorage.setItem('currentSongIndex', currentSongIndex); // Lưu lại bài hát hiện tại
        sessionStorage.setItem('isPlaying', 'true'); // Lưu trạng thái đang phát
    });
	// Shuffle Button
    shuffleBtn.addEventListener('click', () => {
        isShuffle = !isShuffle;
        shuffleBtn.classList.toggle('active', isShuffle);
        shuffleBtn.classList.toggle('inactive', !isShuffle);
        sessionStorage.setItem('isShuffle', isShuffle.toString()); // Lưu trạng thái shuffle
        if (isShuffle) {
            songList = songList.sort(() => Math.random() - 0.5); // Xáo trộn danh sách
        } else {
            songList = songList.sort(); // Sắp xếp lại theo thứ tự ban đầu
        }
    });

    // Repeat Button
    repeatBtn.addEventListener('click', () => {
        isRepeat = !isRepeat;
        audioPlayer.loop = isRepeat; // Kích hoạt chế độ lặp
        repeatBtn.classList.toggle('active', isRepeat);
        repeatBtn.classList.toggle('inactive', !isRepeat);
        sessionStorage.setItem('isRepeat', isRepeat.toString()); // Lưu trạng thái repeat
    });

	
    // Volume control
    volumeControl.addEventListener('input', () => {
        const volume = volumeControl.value / 100;
        audioPlayer.volume = volume;
        sessionStorage.setItem('audioPlayerVolume', volume); // Lưu lại giá trị âm lượng
    });
	
    // Lưu lại vị trí phát nhạc cuối cùng vào sessionStorage khi tạm dừng
    audioPlayer.addEventListener('pause', () => {
        sessionStorage.setItem('audioPlayerCurrentTime', audioPlayer.currentTime);
        sessionStorage.setItem('isPlaying', 'false'); // Lưu trạng thái tạm dừng
    });
	
    // Lưu lại vị trí phát nhạc cuối cùng khi đóng trang
    window.addEventListener('beforeunload', () => {
        sessionStorage.setItem('audioPlayerCurrentTime', audioPlayer.currentTime);
        sessionStorage.setItem('isPlaying', isPlaying.toString()); // Lưu trạng thái phát nhạc
    });
});




</script>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="audio.js"></script> <!-- Đảm bảo rằng bạn đang tải đúng file JS của mình -->
    	</div>
	</header>

    
        <main class="container">
            @RenderBody()
        </main>


    <footer>
        <div class="footer">
			<img class="handk-footer-icon" alt="" src="/images/HanDK_footer.png">
			<div class="tieu-de">
				<div class="tieude1">
					<h1>SẢN PHẨM</h1>
					<a href="/category/nhanCuoi" class="foot">Nhẫn cưới</a>
					<a href="/category/nhanCauHon" class="foot">Nhẫn cầu hôn</a>
					<a href="/category/trangSuc" class="foot">Trang sức</a>
					<a href="/category/kimCuong" class="foot">Kim cương</a>
					<a href="/category/mens" class="foot">Nhẫn nam</a>
				</div>

				<div class="tieude2">
					<h1>LIÊN HỆ</h1>
					<div class="text-foot">GỌI MUA HÀNG</div>
					<div class="foot">0976534850</div>
					<div class="foot">0976534850</div>
					<div class="foot">0976534850</div>
					<div class="text-foot">GÓP Ý KHIẾU NẠI</div>
					<div class="foot">0976534850</div>
					<div class="foot">Mail</div>
					<div class="foot"> </div>
					<div class="foot"> </div>
					<div class="foot"> </div>
					<div class="foot"> </div>
				</div>
				<div class="tieude3">
					<h1>HỖ TRỢ</h1>
					<a href="/thongTin/chinhSachThuHoiVaDoiTra" class="foot">Thu đổi</a>
					<a href="/thongTin/chinhSachThanhToan" class="foot">Thanh toán</a>
					<a href="/thongTin/chinhSachBaoMatThongTin" class="foot">Bảo mật thông tin</a>
					<a href="/thongTin/huongDanDoSize" class="foot">Hướng dẫn đo size</a>
					<a href="/thongTin/giaVang" class="foot">Giá Vàng</a>
				</div>

				<div class="tieude4">
					<h1>VỀ CHÚNG TÔI</h1>
					<a href="/cauChuyenHanDK" class="foot">Câu chuyện HanDK</a>
					<a href="/cuaHangHanDK" class="foot">Cửa hàng HanDK</a>
				</div>
			</div>	
    	</div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
	<script src="~/js/loginPopup.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>